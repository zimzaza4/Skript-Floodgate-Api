import:
    org.bukkit.Bukkit
    org.bukkit.entity.Player

    org.geysermc.floodgate.api.FloodgateApi
   
    me.zimzaza4.geyserutils.spigot.api.PlayerUtils
    me.zimzaza4.geyserutils.common.form.element.NpcDialogueButton
    me.zimzaza4.geyserutils.common.form.element.NpcDialogueButton$ButtonMode
    me.zimzaza4.geyserutils.spigot.api.form.NpcDialogueForm
    
    java.util.function.BiConsumer
    java.util.function.Consumer
    java.util.ArrayList
    
expression [the] dialogue [form] with title %text% and message %text% on %entity%:
    return type: object
    get: 
        set {_F} to new NpcDialogueForm()
        if expr-1 is set:
            {_F}.title(expr-1).dialogue(expr-2).bindEntity(expr-3).hasNextForm(false).buttons(new ArrayList())
            
        return {_F}

expression [the] dialogue button display %text%:
    return type: object
    get: 
        set {_b} to new NpcDialogueButton()
        {_b}.text(expr-1).mode(ButtonMode.BUTTON_MODE)
        set {_array} to new ArrayList()
        {_array}.add("no")
        return {_b}.commands({_array})

expression [the] skin data of %object%:
    return type: string
    get:
        expr-1.skinData()
    set:
        expr-1.skinData(change value)
        
expression [the] keep open [state] of %object%:
    return type: boolean
    get:
        expr-1.hasNextForm()
    set:
        expr-1.hasNextForm(change value)
        



expression [the] skin data with scale %text% and translate %text%:
    return type: string
    get:
        set {_s} to "{""picker_offsets"":{""scale"":[%expr-1%],""translate"":[%expr-2%]},""portrait_offsets"":{""scale"":[%expr-1%],""translate"":[%expr-2%]}}"
        return {_s}
        
        
effect send[-| ]dialogue %object%[ with id %-string%] to %player%:
    trigger:
        if expr-2 is set:
            setListenerOnDialogue(expr-1, expr-2, expr-3)
        expr-1.send(FloodgateApi.getInstance().getPlayer(expr-3.getUniqueId()))

custom event "click button of dialogue":
    pattern: click dialogue button
    event-values: player

custom event "close dialogue":
    pattern: dialogue close
    event-values: player
    
effect add %objects% to [dialogue] %object%:
    trigger:
        set {_a::*} to expr-1
        loop {_a::*}:
            expr-2.buttons().add(loop-value)
            
effect close dialogue of %player%:
    trigger:
        NpcDialogueForm.closeForm(FloodgateApi.getInstance().getPlayer(expr-1.getUniqueId()))
            
function setListenerOnDialogue(f: object, fid: string, p: player):
    create section with {_proxy}, {_form}, {_bid} stored in {_handler::accept}:
        
        set {_events::player} to {_p}
        set {_extras::form-id} to {_fid}
        set {_extras::button-id} to {_bid}
        call custom event "click button of dialogue" with {_events::*} data {_extras::*}
        
        
    set {_proxy} to new proxy instance of BiConsumer using {_handler::*}

    {_f}.handler({_proxy})
    
    create section with {_proxy}, {_form} stored in {_handler::accept}:
        
        set {_events::player} to {_p}
        set {_extras::form-id} to {_fid}
     
        call custom event "close dialogue" with {_events::*} data {_extras::*}
        
        
    set {_proxy} to new proxy instance of Consumer using {_handler::*}

    {_f}.closeHandler({_proxy})
    

